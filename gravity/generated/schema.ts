import { Address } from "./graph-ts/types";
import * as store from "./graph-ts/store"

export class Gravatar {
  data:any = {};

  constructor(private id: `0x${string}`) {
  }

  save(): void {
    store.set("Gravatar", this.id, this.data);
  }

  static load(id: `0x${string}`): Gravatar | null {
    const loaded = store.get("Gravatar", id);
    if (loaded && loaded.data) {
      const result = new Gravatar(id);
      result.data = JSON.parse(loaded.data);
      return result;
    } else {
      return null;
    }
  }

  get owner(): Address {
    return this.data.owner;
  }

  set owner(owner: Address) {
    this.data.owner = owner;
  }

  get displayName(): string {
    return this.data.displayName;
  }

  set displayName(displayName: string) {
    this.data.displayName = displayName;
  }

  get imageUrl(): string {
    return this.data.imageUrl;
  }

  set imageUrl(imageUrl: string) {
    this.data.imageUrl = imageUrl;
  }
}


// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

// import {
//   TypedMap,
//   Entity,
//   Value,
//   ValueKind,
//   store,
//   Bytes,
//   BigInt,
//   BigDecimal,
// } from "@graphprotocol/graph-ts";

// export class Gravatar extends Entity {
//   constructor(id: string) {
//     super();
//     this.set("id", Value.fromString(id));
//   }

//   save(): void {
//     let id = this.get("id");
//     assert(id != null, "Cannot save Gravatar entity without an ID");
//     if (id) {
//       assert(
//         id.kind == ValueKind.STRING,
//         `Entities of type Gravatar must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`,
//       );
//       store.set("Gravatar", id.toString(), this);
//     }
//   }

//   static loadInBlock(id: string): Gravatar | null {
//     return changetype<Gravatar | null>(store.get_in_block("Gravatar", id));
//   }

//   static load(id: string): Gravatar | null {
//     return changetype<Gravatar | null>(store.get("Gravatar", id));
//   }

//   get id(): string {
//     let value = this.get("id");
//     if (!value || value.kind == ValueKind.NULL) {
//       throw new Error("Cannot return null for a required field.");
//     } else {
//       return value.toString();
//     }
//   }

//   set id(value: string) {
//     this.set("id", Value.fromString(value));
//   }

//   get owner(): Bytes {
//     let value = this.get("owner");
//     if (!value || value.kind == ValueKind.NULL) {
//       throw new Error("Cannot return null for a required field.");
//     } else {
//       return value.toBytes();
//     }
//   }

//   set owner(value: Bytes) {
//     this.set("owner", Value.fromBytes(value));
//   }

//   get displayName(): string {
//     let value = this.get("displayName");
//     if (!value || value.kind == ValueKind.NULL) {
//       throw new Error("Cannot return null for a required field.");
//     } else {
//       return value.toString();
//     }
//   }

//   set displayName(value: string) {
//     this.set("displayName", Value.fromString(value));
//   }

//   get imageUrl(): string {
//     let value = this.get("imageUrl");
//     if (!value || value.kind == ValueKind.NULL) {
//       throw new Error("Cannot return null for a required field.");
//     } else {
//       return value.toString();
//     }
//   }

//   set imageUrl(value: string) {
//     this.set("imageUrl", Value.fromString(value));
//   }
// }
